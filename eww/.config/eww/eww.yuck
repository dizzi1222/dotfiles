(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces.bash")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace.bash")
(defwidget workspaces []
  (eventbox
		:onscroll "bash ~/.config/eww/scripts/change-active-workspace.bash {} ${current_workspace}"
		:class "workspaces-widget"
    (box :space-evenly false :spacing 10
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}" :visible {workspace.windows > 0 || workspace.id == current_workspace} :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""}" )
            )
          )
        )
      )
    )
  )

(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    time))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :geometry (geometry :x "0px"
                      :y "0px"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
	:stacking: "bottom"
  :exclusive true
	:namespace "eww"
  (bar))
